{"ast":null,"code":"var _jsxFileName = \"/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport styled from \"styled-components\";\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\nconst SelectInput = styled.select`\n  border: 1px solid black;\n`;\nexport default function CountrySelector() {\n  const {\n    stats: countries,\n    loading,\n    error\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('CAN');\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Loading...\");\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Currently Showing \", selectedCountry), __jsx(\"select\", {\n    onChange: e => {\n      setSelectedCountry(e.target.value);\n    },\n    value: selectedCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, code], index) => __jsx(\"option\", {\n    key: code + \"-\" + index,\n    value: countries.iso3[code],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, country))), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/CountrySelector.js"],"names":["useState","styled","useStats","Stats","SelectInput","select","CountrySelector","stats","countries","loading","error","selectedCountry","setSelectedCountry","e","target","value","Object","entries","map","country","code","index","iso3"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAAO;;CAAlC;AAIA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM;AAACC,IAAAA,KAAK,EAAEC,SAAR;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAqCR,QAAQ,CAAC,0CAAD,CAAnD;AACA,QAAM;AAAA,OAACS,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AAEA,MAAI,CAACQ,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAChB,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBC,eAAvB,CADF,EAEE;AAAQ,IAAA,QAAQ,EAAEE,CAAC,IAAI;AACrBD,MAAAA,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAFD;AAEG,IAAA,KAAK,EAAEJ,eAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGK,MAAM,CAACC,OAAP,CAAeT,SAAS,CAACA,SAAzB,EAAoCU,GAApC,CAAwC,CAAC,CAACC,OAAD,EAAUC,IAAV,CAAD,EAAkBC,KAAlB,KACvC;AAAQ,IAAA,GAAG,EAAED,IAAI,GAAG,GAAP,GAAaC,KAA1B;AAAiC,IAAA,KAAK,EAAEb,SAAS,CAACc,IAAV,CAAeF,IAAf,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+DD,OAA/D,CADD,CAHH,CAFF,EASE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAG,4CAA2CR,eAAgB,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAeD","sourcesContent":["import { useState } from 'react';\nimport styled from \"styled-components\";\n\nimport useStats from '../utils/useStats';\n\nimport Stats from './Stats';\n\nconst SelectInput = styled.select`\n  border: 1px solid black;\n`;\n\nexport default function CountrySelector() {\n  const {stats: countries, loading, error} = useStats('https://covid19.mathdro.id/api/countries');\n  const [selectedCountry, setSelectedCountry] = useState('CAN');\n\n  if (!countries) return <p>Loading...</p>\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Loading...</p>\n\n  return (\n    <div>\n      <h2>Currently Showing {selectedCountry}</h2>\n      <select onChange={e => {\n        setSelectedCountry(e.target.value);\n      }} value={selectedCountry}>\n        {Object.entries(countries.countries).map(([country, code], index) => (\n          <option key={code + \"-\" + index} value={countries.iso3[code]}>{country}</option>\n        ))}\n      </select>\n      <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`} />\n    </div>\n  )\n\n  \n}"]},"metadata":{},"sourceType":"module"}