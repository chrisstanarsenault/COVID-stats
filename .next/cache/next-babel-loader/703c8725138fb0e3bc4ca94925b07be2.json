{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    console.log('Mounting or updating');\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              console.log(\"Fetching Data\");\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 5:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","console","log","fetchData","fetch","then","res","json","err","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAENL,QAAQ,CAAC,IAAD,CAFF;AAAA,MAE7BM,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGVP,QAAQ,EAHE;AAAA,MAG7BQ,KAH6B;AAAA,MAGtBC,QAHsB;;AAIpCR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEL,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AACRC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAHF;AAAA,+CAIqBE,KAAK,CAACV,GAAD,CAAL,CAAWW,IAAX,CAAgB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAnB,WAAyC,UAAAC,GAAG;AAAA,uBAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,eAA5C,CAJrB;;AAAA;AAIQC,cAAAA,IAJR;AAKEb,cAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAK,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACT,GAAD,CAXM,CAAT;AAYA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA,OAAT;AAAkBE,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('Mounting or updating')\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      console.log(\"Fetching Data\");\n      const data = await fetch(url).then(res => res.json()).catch(err => setError(err));\n      setStats(data);\n      setLoading(false);\n    }  \n    fetchData();\n  }, [url])\n  return { stats, loading, error };\n}"]},"metadata":{},"sourceType":"module"}