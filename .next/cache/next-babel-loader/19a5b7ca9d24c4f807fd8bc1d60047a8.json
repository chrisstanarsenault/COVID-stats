{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\nexport default function CountrySelector() {\n  var countries = useStats('https://covid19.mathdro.id/api/countries');\n\n  var _useState = useState('USA'),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Loading...\");\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Loading...\");\n  console.log(countries);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Currently Showing \", selectedCountry), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      setSelectedCountry(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    return __jsx(\"option\", {\n      key: code,\n      value: countries.iso3[code],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, country);\n  })), __jsx(Stats, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/CountrySelector.js"],"names":["useState","useStats","Stats","CountrySelector","countries","selectedCountry","setSelectedCountry","loading","error","console","log","e","target","value","Object","entries","map","country","code","iso3"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,MAAMC,SAAS,GAAGH,QAAQ,CAAC,0CAAD,CAA1B;;AADwC,kBAEMD,QAAQ,CAAC,KAAD,CAFd;AAAA,MAEjCK,eAFiC;AAAA,MAEhBC,kBAFgB;;AAGxC,MAAI,CAACF,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAChB,MAAIG,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBC,eAAvB,CADF,EAEE;AAAQ,IAAA,QAAQ,EAAE,kBAAAM,CAAC,EAAI;AACrBL,MAAAA,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,MAAM,CAACC,OAAP,CAAeX,SAAS,CAACA,SAAzB,EAAoCY,GAApC,CAAwC;AAAA;AAAA,QAAEC,OAAF;AAAA,QAAWC,IAAX;;AAAA,WACvC;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,KAAK,EAAEd,SAAS,CAACe,IAAV,CAAeD,IAAf,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDD,OAAjD,CADuC;AAAA,GAAxC,CAHH,CAFF,EASE,MAAC,KAAD;AAAO,IAAA,GAAG,qDAA8CZ,eAA9C,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import { useState } from 'react';\n\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\n\nexport default function CountrySelector() {\n  const countries = useStats('https://covid19.mathdro.id/api/countries');\n  const [selectedCountry, setSelectedCountry] = useState('USA');\n  if (!countries) return <p>Loading...</p>\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Loading...</p>\n  console.log(countries);\n  return (\n    <div>\n      <h2>Currently Showing {selectedCountry}</h2>\n      <select onChange={e => {\n        setSelectedCountry(e.target.value);\n      }}>\n        {Object.entries(countries.countries).map(([country, code]) => (\n          <option key={code} value={countries.iso3[code]}>{country}</option>\n        ))}\n      </select>\n      <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`} />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}