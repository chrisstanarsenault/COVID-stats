{"ast":null,"code":"var _jsxFileName = \"/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { loading, stats, error } from \"../utils/useStats\";\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\nexport default function CountrySelector() {\n  const countries = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('USA');\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Loading...\");\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Loading...\");\n  console.log(countries);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Currently Showing \", selectedCountry), __jsx(\"select\", {\n    onChange: e => {\n      setSelectedCountry(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, code]) => __jsx(\"option\", {\n    key: code,\n    value: countries.iso3[code],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, country))), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/CountrySelector.js"],"names":["useState","loading","stats","error","useStats","Stats","CountrySelector","countries","selectedCountry","setSelectedCountry","console","log","e","target","value","Object","entries","map","country","code","iso3"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,QAAqC,mBAArC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,SAAS,GAAGH,QAAQ,CAAC,0CAAD,CAA1B;AACA,QAAM;AAAA,OAACI,eAAD;AAAA,OAAkBC;AAAlB,MAAwCT,QAAQ,CAAC,KAAD,CAAtD;AACA,MAAI,CAACO,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAChB,MAAIN,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACXO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBC,eAAvB,CADF,EAEE;AAAQ,IAAA,QAAQ,EAAEI,CAAC,IAAI;AACrBH,MAAAA,kBAAkB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,MAAM,CAACC,OAAP,CAAeT,SAAS,CAACA,SAAzB,EAAoCU,GAApC,CAAwC,CAAC,CAACC,OAAD,EAAUC,IAAV,CAAD,KACvC;AAAQ,IAAA,GAAG,EAAEA,IAAb;AAAmB,IAAA,KAAK,EAAEZ,SAAS,CAACa,IAAV,CAAeD,IAAf,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDD,OAAjD,CADD,CAHH,CAFF,EASE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAG,4CAA2CV,eAAgB,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import { useState } from 'react';\nimport { loading, stats, error} from \"../utils/useStats\";\n\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\n\nexport default function CountrySelector() {\n  const countries = useStats('https://covid19.mathdro.id/api/countries');\n  const [selectedCountry, setSelectedCountry] = useState('USA');\n  if (!countries) return <p>Loading...</p>\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Loading...</p>\n  console.log(countries);\n  return (\n    <div>\n      <h2>Currently Showing {selectedCountry}</h2>\n      <select onChange={e => {\n        setSelectedCountry(e.target.value);\n      }}>\n        {Object.entries(countries.countries).map(([country, code]) => (\n          <option key={code} value={countries.iso3[code]}>{country}</option>\n        ))}\n      </select>\n      <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`} />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}