{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/Stats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background: #f2f2f2;\\n  font-size: 2rem;\\n  padding: 2rem;\\n  border-radius: 2rem;\\n  display: grid;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-gap: 1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport useStats from '../utils/useStats';\nimport styled from 'styled-components';\nvar StatGrid = styled.div(_templateObject());\nvar StatBlock = styled.div(_templateObject2());\nvar state = {\n  isChart: false\n};\nexport default function Stats(_ref) {\n  var url = _ref.url;\n\n  var _useStats = useStats(url),\n      stats = _useStats.stats;\n\n  if (!stats) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Loading...\");\n  if (state.isChart) return __jsx(\"img\", {\n    src: stats.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n  return __jsx(StatGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    className: \"statBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Confirmed:\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, stats.confirmed.value)), __jsx(StatBlock, {\n    className: \"statBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Deaths:\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, stats.deaths.value)), __jsx(StatBlock, {\n    className: \"statBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Recovered:\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, stats.recovered.value)), __jsx(\"button\", {\n    onClick: setState(this.isChart = false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Click Me\"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Last Updated: \", stats.lastUpdate.substring(0, 10), \" @ \", stats.lastUpdate.substring(11, 16)));\n}","map":{"version":3,"sources":["/Users/irepair/Desktop/Dev/Web Dev/Projects/rona/components/Stats.js"],"names":["useStats","styled","StatGrid","div","StatBlock","state","isChart","Stats","url","stats","image","confirmed","value","deaths","recovered","setState","lastUpdate","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAV,mBAAd;AAMA,IAAMC,SAAS,GAAGH,MAAM,CAACE,GAAV,oBAAf;AAWA,IAAIE,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE;AADC,CAAZ;AAIA,eAAe,SAASC,KAAT,OAAsB;AAAA,MAANC,GAAM,QAANA,GAAM;;AAAA,kBACjBR,QAAQ,CAACQ,GAAD,CADS;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;;AAEnC,MAAI,CAACA,KAAL,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEZ,MAAIJ,KAAK,CAACC,OAAV,EAAmB,OAAO;AAAK,IAAA,GAAG,EAAEG,KAAK,CAACC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACnB,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,CAACE,SAAN,CAAgBC,KAAvB,CAFF,CADF,EAME,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACI,MAAN,CAAaD,KAApB,CAFF,CANF,EAWE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACK,SAAN,CAAgBF,KAAvB,CAFF,CAXF,EAgBE;AAAQ,IAAA,OAAO,EAAEG,QAAQ,CAAC,KAAKT,OAAL,GAAe,KAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBG,KAAK,CAACO,UAAN,CAAiBC,SAAjB,CAA2B,CAA3B,EAA8B,EAA9B,CAAnB,SAAyDR,KAAK,CAACO,UAAN,CAAiBC,SAAjB,CAA2B,EAA3B,EAA+B,EAA/B,CAAzD,CAlBF,CADF;AAsBD","sourcesContent":["import useStats from '../utils/useStats';\nimport styled from 'styled-components';\n\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst StatBlock = styled.div`\n  background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nlet state = {\n  isChart: false\n}\n\nexport default function Stats({url}) {\n  const { stats } = useStats(url);\n  if (!stats) return <p>Loading...</p>\n\n  if (state.isChart) return <img src={stats.image} />\n  return (\n    <StatGrid>\n      <StatBlock className=\"statBlock\">\n        <h3>Confirmed:</h3>\n        <span>{stats.confirmed.value}</span>\n      </StatBlock>\n\n      <StatBlock className=\"statBlock\">\n        <h3>Deaths:</h3>\n        <span>{stats.deaths.value}</span>\n      </StatBlock>\n\n      <StatBlock className=\"statBlock\">\n        <h3>Recovered:</h3>\n        <span>{stats.recovered.value}</span>\n      </StatBlock>\n\n      <button onClick={setState(this.isChart = false)}>Click Me</button>\n\n      <h2>Last Updated: {stats.lastUpdate.substring(0, 10)} @ {stats.lastUpdate.substring(11, 16)}</h2>\n    </StatGrid>\n  )\n}"]},"metadata":{},"sourceType":"module"}